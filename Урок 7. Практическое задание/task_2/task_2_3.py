"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""


from random import randint
from timeit import timeit
from statistics import median


m = 10
my_list = [randint(0, 100) for i in range(2 * m + 1)]


print(f'Медиана: {median(my_list)}')
print(f'Время выполнения: {timeit("median(my_list[:])", globals=globals(), number=100)}')


# Время выполнения 10: 8.97919962881133e-05
# Время выполнения 100: 0.0011972919892286882
# Время выполнения 1000: 0.01806316600413993


"""
Вывод:
Самой быстрой функцией для поиска медианы в списке оказалась функция median из модуля statistics.
Думаю, что в работе стоит использовать уже написанные функции, а не писать их заново.
"""
